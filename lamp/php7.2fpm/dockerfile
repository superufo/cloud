from alpine:3.10
MAINTAINER mike "mike@365oa.com"  
  
#保存自己的构建脚本
WORKDIR /
copy dockerfile dockerfile

#添加阿里云的源 当前alpine为3.10  在首行添加一行 
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

#RUN  apk add --update --no-cache  wget gcc make  automake autoconf  openssl-dev  
#ca-certificate
RUN build_pkgs="build-base linux-headers openssl-dev pcre-dev wget zlib-dev wget gcc make automake autoconf" \
  && runtime_pkgs="openssl pcre zlib" \
  && apk --update add ${build_pkgs} ${runtime_pkgs}

RUN mkdir /download
VOLUME /download

WORKDIR /download
RUN  wget https://sourceforge.mirrorservice.org/m/mc/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz \ 
	 &&  tar -zxvf libmcrypt-2.5.8.tar.gz \
	 &&  cd libmcrypt-2.5.8 \
	 &&  ./configure --prefix=/usr/local \
	 &&  make \
	 &&  make install

WORKDIR /download
 
#libmcrypt libmcrypt-dev libtripc-dev epel-release  libicu-dev libcurl-dev 
RUN apk add --update --no-cache   git   curl  libxml2-dev \
libpng-dev \
libjpeg \
libjpeg-turbo-dev \
pcre-dev  \
sqlite-dev  \
bzip2-dev  \
libcurl  \
freetype-dev \ 
gd-dev \
readline-dev \
icu-libs \
curl \
curl-dev \
zlib  \
memcached  
   	 			 
RUN mkdir -p /app/www/php	 

#创建运行的用户和用户组
RUN addgroup -g 10001 -S www-data 
RUN adduser www-data -u 20001 -D -S -s /bin/bash -G www-data
				 		 
#PHP 安装	 		 
RUN wget https://www.php.net/distributions/php-7.1.33.tar.gz \
    && tar zxvf php-7.1.33.tar.gz \
	&& cd php-7.1.33 \
    && ./configure \
--prefix=/usr/local/php7 \
--disable-fileinfo \
--with-pdo-mysql=mysqlnd \
--with-mcrypt \
--with-bz2 \
--with-gd \
--with-freetype-dir \
--with-jpeg-dir \
--with-png-dir \
--with-zlib-dir \
--with-libxml-dir \
--with-readline \
--with-curl \
--with-pear \
--with-openssl \
--with-fpm-group=www-data \
--with-fpm-user=www-data \
--enable-fpm \
--enable-xml \
--enable-bcmath \
--enable-shmop \
--enable-sysvsem \
--enable-inline-optimization \
--enable-mbregex \
--enable-mbstring \
--enable-gd-native-ttf \
--enable-pcntl \
--enable-sockets \
--enable-soap \
--enable-session \
--enable-zip  \ 
&& make && make install \
&& cp -f /usr/local/php7/etc/php-fpm.conf.default  /usr/local/php7/etc/php-fpm.conf \
&& cp -f /usr/local/php7/etc/php-fpm.d/www.conf.default  /usr/local/php7/etc/php-fpm.d/www.conf 

RUN sed -i 's/nobody/www-data/g' /usr/local/php7/etc/php-fpm.conf \
    && sed -i 's/nobody/www-data/g' /usr/local/php7/etc/php-fpm.d/www.conf \
	&& sed -i 's/;daemonize = yes/daemonize = no/g' /usr/local/php7/etc/php-fpm.conf \  
	&& sed -i 's/127.0.0.1:9000/0.0.0.0:9000/g' /usr/local/php7/etc/php-fpm.conf \
	&& sed -i 's/127.0.0.1:9000/0.0.0.0:9000/g' /usr/local/php7/etc/php-fpm.d/www.conf

ENV PATH /usr/local/php7/bin:$PATH   
ENV PATH /usr/local/php7/sbin:$PATH  

WORKDIR /download
RUN  wget  http://pecl.php.net/get/redis-3.1.3.tgz \
     && tar zxvf redis-3.1.3.tgz \
     && cd redis-3.1.3 \
     && /usr/local/php7/bin/phpize \
     && ./configure --with-php-config=/usr/local/php7/bin/php-config \
     && make && make install \ 
     && echo "extension = redis.so" >> /etc/php.ini

RUN  wget https://pecl.php.net/get/mongodb-1.6.0.tgz \
     && tar zxvf mongodb-1.6.0.tgz \
     && cd mongodb-1.6.0 \
     && /usr/local/php7/bin/phpize \
     && ./configure --with-php-config=/usr/local/php7/bin/php-config \
     && make && make install \
     && echo "extension = mongodb.so" >> /etc/php.ini

# PHP composer
ENV COMPOSER_HOME /root/composer  
WORKDIR /usr/local/bin  
RUN curl -s http://getcomposer.org/installer | php \  
&&  chmod a+x composer.phar \  
&&  ln -s /usr/local/bin/composer.phar /bin/composer \  
&&  composer config -g repo.packagist composer https://packagist.laravel-china.org  
ENV PATH $COMPOSER_HOME/vendor/bin:$PATH     

RUN rm -Rf /download/* 
WORKDIR /usr/local/bin 
EXPOSE 9000
ENTRYPOINT  nohup  php-fpm -y /usr/local/php7/etc/php-fpm.conf > /tmp/php-fpm.log

#alpine musl ENTRYPOINT问题  https://cloud.tencent.com/developer/ask/174617
#COPY ld-musl-x86_64.pat /etc/ld-musl-x86_64.pat
#CMD   php-fpm  -y  /usr/local/php7/etc/php-fpm.conf
#ENTRYPOINT ["php-fpm","-y","/usr/local/php7/etc/php-fpm.conf"]