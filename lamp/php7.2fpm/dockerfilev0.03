#from alpine:latest
from  centos:7
MAINTAINER mike "mike@365oa.com"  
  
#COPY ./sources.list /etc/apt/sources.list  
#保存自己的构建脚本
WORKDIR /
copy dockerfile dockerfile

RUN yum install -y wget

#切换为阿里云的源
#ADD 可以添加tar文件并且解压  ADD html.tar /var/www ADD http://ip/html.tar /var/www
ADD  yum_modify.sh  yum_modify.sh
RUN  chmod 777 yum_modify.sh 
RUN echo 'yum_modify.sh start .................. '  
RUN sh  yum_modify.sh 
RUN echo 'yum_modify.sh end .....................' 
  
# set timezome  
ENV TZ=Asia/Shanghai  
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone  

RUN yum  -y update 
RUN yum install -y wget gcc gcc-c++ make  automake autoconf  openssl-devel
RUN mkdir /download

WORKDIR /download
RUN  wget https://sourceforge.mirrorservice.org/m/mc/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz \ 
	 &&  tar -zxvf libmcrypt-2.5.8.tar.gz \
	 &&  cd libmcrypt-2.5.8 \
	 &&  ./configure --prefix=/usr/local \
	 &&  make \
	 &&  make install

WORKDIR /download
#当前目录 复制
#RUN cp /etc/apt/sources.list /etc/apt/sources.listbak  
#COPY ./sources.list /etc/apt/sources.list  

#libmcrypt libmcrypt-devel libtripc-devel
RUN yum install -y  epel-release git   curl  libxml2-devel \
pcre-devel  \
sqlite-devel  \
bzip2-devel  \
libcurl-devel  \
freetype-devel \ 
gd-devel \
readline-devel \
libicu-devel \			 		 
openssl \
curl \
zlib  \
memcached  \
vim  
   	 
#RUN  ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib				 
RUN mkdir -p /app/www/php	 

#创建运行的用户和用户组
RUN  groupadd www-data \
&& useradd -s /sbin/nologin -g www-data www-data
				 		 
#PHP 安装			 
RUN wget https://www.php.net/distributions/php-7.1.33.tar.gz \
    && tar zxvf php-7.1.33.tar.gz 

WORKDIR /download/php-7.1.33	

RUN ./configure \
--prefix=/usr/local/php7 \
--disable-fileinfo \
--with-pdo-mysql=mysqlnd \
--with-mcrypt \
--with-bz2 \
--with-gd \
--with-freetype-dir \
--with-jpeg-dir \
--with-png-dir \
--with-zlib-dir \
--with-libxml-dir \
--with-readline \
--with-curl \
--with-pear \
--with-openssl \
--with-fpm-group=www-data \
--with-fpm-user=www-data \
--enable-fpm \
--enable-xml \
--enable-bcmath \
--enable-shmop \
--enable-sysvsem \
--enable-inline-optimization \
--enable-mbregex \
--enable-mbstring \
--enable-gd-native-ttf \
--enable-pcntl \
--enable-sockets \
--enable-soap \
--enable-session \
--enable-zip  
RUN make && make install \
&& cp -f /usr/local/php7/etc/php-fpm.conf.default  /usr/local/php7/etc/php-fpm.conf \
&& cp -f /usr/local/php7/etc/php-fpm.d/www.conf.default  /usr/local/php7/etc/php-fpm.d/www.conf 

RUN sed -i 's/nobody/www-data/g' /usr/local/php7/etc/php-fpm.conf
RUN sed -i 's/nobody/www-data/g' /usr/local/php7/etc/php-fpm.d/www.conf

ENV PATH /usr/local/php7/bin:$PATH   
ENV PATH /usr/local/php7/sbin:$PATH  

WORKDIR /download
RUN  wget  http://pecl.php.net/get/redis-3.1.3.tgz \
     && tar zxvf redis-3.1.3.tgz \
     && cd redis-3.1.3 \
     && /usr/local/php7/bin/phpize  \
     && ./configure --with-php-config=/usr/local/php7/bin/php-config \
     && make && make install 
RUN  echo "extension = redis.so" >> /etc/php.ini

# PHP composer
ENV COMPOSER_HOME /root/composer  
WORKDIR /usr/local/bin  
RUN curl -s http://getcomposer.org/installer | php \  
&&  chmod a+x composer.phar \  
&&  ln -s /usr/local/bin/composer.phar /bin/composer \  
&&  composer config -g repo.packagist composer https://packagist.laravel-china.org  
ENV PATH $COMPOSER_HOME/vendor/bin:$PATH     

RUN rm -Rf /download/*
RUN yum clean all
RUN rm -rf /var/cache/yum/*	 
CMD   php-fpm  -y  /usr/local/php7/etc/php-fpm.conf
ENTRYPOINT ["php-fpm","-y","/usr/local/php7/etc/php-fpm.conf"]

#ENTRYPOINT ["/docker-entrypoint.sh"]
